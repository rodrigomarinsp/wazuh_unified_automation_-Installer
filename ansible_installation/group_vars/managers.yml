---
# Wazuh Unified Installer - Manager Group Variables
# Author: Rodrigo Marins Piaba (Fanaticos4tech)
# E-Mail: rodrigomarinsp@gmail.com / fanaticos4tech@gmail.com
# GitHub: rodrigomarinsp
# Instagram: @fanaticos4tech

# üõ°Ô∏è Wazuh Manager Configuration
wazuh_manager_config:
  # Global settings
  email_notification: false
  email_to: ["admin@example.com"]
  email_from: "wazuh@{{ ansible_domain | default('localhost') }}"
  smtp_server: "{{ vault_smtp_server | default('localhost') }}"
  
  # Client buffer settings
  client_buffer: 8192
  agent_buffer: 8192
  
  # Analysis settings
  analysis_threads: 4
  max_agents: 10000
  
  # Remote connection settings
  remote_connection_timeout: 60
  remote_connection_max_agents: 1000

# üîó Cluster Configuration
wazuh_cluster_enabled: true
wazuh_cluster_config:
  name: "{{ deployment_name | default('wazuh-cluster') }}"
  node_name: "{{ inventory_hostname }}"
  node_type: "{{ wazuh_manager_type | default('worker') }}"
  key: "{{ vault_cluster_key | default('MySecretClusterKey123') }}"
  bind_addr: "{{ ansible_default_ipv4.address }}"
  port: 1516
  nodes: "{{ groups['wazuh_manager'] | map('extract', hostvars, 'ansible_default_ipv4') | map(attribute='address') | list }}"
  hidden: false
  disabled: false

# üìä API Configuration
wazuh_api_config:
  host: "{{ ansible_default_ipv4.address }}"
  port: "{{ wazuh_manager_api_port | default(55000) }}"
  use_only_authd: false
  drop_privileges: true
  experimental_features: false
  max_upload_size: 10485760
  max_request_per_minute: 300
  cors_enabled: true
  cors_source_route: "*"
  cors_expose_headers: "*"
  cors_allow_headers: "*"
  cors_allow_credentials: true
  cache_enabled: true
  cache_time: 0.5
  access_log: true

# üîê Authentication Configuration
wazuh_authd_config:
  enable: true
  port: 1515
  use_source_ip: true
  force_insert: true
  force_time: 0
  purge: true
  use_password: false
  limit_maxagents: true
  ciphers: HIGH:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@STRENGTH
  ssl_agent_ca: null
  ssl_verify_host: false
  ssl_manager_cert: "{{ wazuh_home }}/etc/sslmanager.cert"
  ssl_manager_key: "{{ wazuh_home }}/etc/sslmanager.key"
  ssl_auto_negotiate: false

# üìù Rules and Decoders Configuration
wazuh_rules_config:
  custom_rules_enabled: true
  custom_rules_dir: "{{ wazuh_rules_dir }}/custom"
  rule_files:
    - "0010-rules_config.xml"
    - "0015-ossec_rules.xml"
    - "0020-syslog_rules.xml"
    - "0025-sendmail_rules.xml"
    - "0030-postfix_rules.xml"
    - "0035-sshd_rules.xml"
    - "0040-imapd_rules.xml"
    - "0045-mailscanner_rules.xml"
    - "0050-ms-exchange_rules.xml"
    - "0055-smbd_rules.xml"
    - "0060-vsftpd_rules.xml"
    - "0065-named_rules.xml"
    - "0070-dpkg_rules.xml"
    - "0075-su_rules.xml"
    - "0080-sysmon_rules.xml"
    - "0085-firewall_rules.xml"
    - "0090-kernel_rules.xml"
    - "0095-nginx_rules.xml"
    - "0100-apache_rules.xml"

wazuh_decoders_config:
  custom_decoders_enabled: true
  custom_decoders_dir: "{{ wazuh_decoders_dir }}/custom"
  decoder_files:
    - "0005-wazuh_decoders.xml"
    - "0010-active-response_decoders.xml"
    - "0015-apache_decoders.xml"
    - "0020-arpwatch_decoders.xml"
    - "0025-asterisk_decoders.xml"

# üö® Active Response Configuration
wazuh_active_response:
  enabled: true
  ca_store: "{{ wazuh_home }}/etc/wpk_root.pem"
  ca_verification: true
  
  commands:
    - name: disable-account
      executable: disable-account
      timeout_allowed: true
    - name: restart-wazuh
      executable: restart-wazuh
    - name: firewall-drop
      executable: firewall-drop
      timeout_allowed: true
    - name: host-deny
      executable: host-deny
      timeout_allowed: true
    - name: route-null
      executable: route-null
      timeout_allowed: true

  responses:
    - command: firewall-drop
      location: local
      rules_id: [100100, 100101]
      timeout: 600
    - command: host-deny
      location: local
      rules_id: [100200, 100201]
      timeout: 600

# üîç Vulnerability Detection
wazuh_vulnerability_detector:
  enabled: true
  interval: "5m"
  min_full_scan_interval: "6h"
  run_on_start: true
  
  providers:
    - enabled: true
      os:
        - "trusty"
        - "xenial"
        - "bionic"
        - "focal"
        - "jammy"
      update_interval: "60m"
      name: "canonical"
    - enabled: true
      os: 
        - "wheezy"
        - "jessie"
        - "stretch"
        - "buster"
        - "bullseye"
      update_interval: "60m"
      name: "debian"
    - enabled: true
      update_interval: "60m"
      name: "redhat"
      os:
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"

# üìà Performance Tuning
wazuh_manager_performance:
  # Analysis configuration
  analysis_workers: "{{ ansible_processor_vcpus }}"
  logcollector_threads: 2
  remoted_threads: 8
  
  # Buffer sizes
  queue_size: 131072
  input_threads: 4
  
  # Memory limits
  memory_size: "{{ (ansible_memtotal_mb * 0.4) | int }}m"
  
  # File limits
  max_files: 65536
  max_fd: 1024

# üîÑ Log Management
wazuh_manager_logging:
  # Main log configuration
  log_level: "{{ log_level | default('info') }}"
  log_format: "{{ log_formats.manager | default('json') }}"
  
  # Log rotation
  logrotate_enabled: true
  logrotate_frequency: daily
  logrotate_size: 100M
  logrotate_maxage: "{{ log_retention_days | default(30) }}"
  logrotate_compress: true

# üéØ Agent Management
wazuh_agent_management:
  # Auto enrollment
  auto_enrollment_enabled: true
  enrollment_timeout: 120
  
  # Agent groups
  default_groups:
    - name: "default"
      configuration: |
        <agent_config>
          <syscheck>
            <frequency>43200</frequency>
            <scan_on_start>yes</scan_on_start>
          </syscheck>
        </agent_config>
    - name: "linux-servers"
      configuration: |
        <agent_config os="Linux">
          <syscheck>
            <frequency>21600</frequency>
            <directories check_all="yes">/etc,/usr/bin,/usr/sbin</directories>
            <directories check_all="yes">/bin,/sbin,/boot</directories>
          </syscheck>
          <rootcheck>
            <frequency>86400</frequency>
          </rootcheck>
        </agent_config>
    - name: "windows-servers"
      configuration: |
        <agent_config os="Windows">
          <syscheck>
            <frequency>21600</frequency>
            <directories check_all="yes">%WINDIR%/win.ini</directories>
            <directories check_all="yes">%WINDIR%/system.ini</directories>
          </syscheck>
        </agent_config>

# üîß Integration Settings
wazuh_manager_integrations:
  # VirusTotal integration
  virustotal:
    enabled: "{{ integrations.virustotal.enabled | default(false) }}"
    api_key: "{{ integrations.virustotal.api_key | default('') }}"
    
  # Slack integration  
  slack:
    enabled: "{{ integrations.slack.enabled | default(false) }}"
    webhook_url: "{{ integrations.slack.webhook_url | default('') }}"
    
  # Email integration
  email:
    enabled: "{{ integrations.email.enabled | default(false) }}"
    smtp_server: "{{ integrations.email.smtp_server | default('') }}"
    smtp_port: "{{ integrations.email.smtp_port | default(587) }}"

# üìä Monitoring and Metrics
wazuh_manager_monitoring:
  # Statistics
  internal_options:
    analysisd.stats: 1
    remoted.stats: 1
    logcollector.stats: 1
    
  # Custom monitoring
  localfile_configs:
    - location: "{{ wazuh_log_dir }}/ossec.log"
      log_format: syslog
    - location: "{{ wazuh_log_dir }}/api.log"
      log_format: json
      target: ["agent"]

# üîí Security Hardening
wazuh_manager_security:
  # File permissions
  strict_permissions: true
  
  # Network security
  bind_address: "{{ ansible_default_ipv4.address }}"
  allowed_ips: "{{ firewall_allowed_networks | default([]) }}"
  
  # Authentication
  api_authentication_required: true
  strong_passwords_required: true
  
  # Encryption
  ssl_ciphers: "ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS"
  ssl_protocols: "TLSv1.2 TLSv1.3"

# üöÄ Startup Configuration
wazuh_manager_startup:
  enabled: true
  state: started
  restart_on_config_change: true
  systemd_override:
    Service:
      LimitNOFILE: 65536
      LimitNPROC: 32768
